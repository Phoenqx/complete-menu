--[[-- login.script

local username = ""
local password = ""

function init(self)
	-- Optionally, set focus to the username field on start
end

local function on_login_button_pressed()
	print("Username: " .. username)
	print("Password: " .. password)

	-- Replace this with your actual login logic
	if username == "user" and password == "pass" then
		print("Login successful!")
		-- Proceed to next screen or action
	else
		print("Invalid username or password.")
	end
end

function on_input(self, action)
	if action.id == hash("usernameInput") then
		if action.text then
			username = username .. action.text  -- Append text
		elseif action.delete then
			username = username:sub(1, -2)  -- Remove last character
		end
	elseif action.id == hash("passwordInput") then
		if action.text then
			password = password .. action.text  -- Append text
		elseif action.delete then
			password = password:sub(1, -2)  -- Remove last character
		end
	elseif action.id == hash("login/button") and action.pressed then
		on_login_button_pressed()
	end
end--]]





function init(self)
	msg.post(".", "acquire_input_focus") -- <1>
	self.message = "" -- <2>
end

function on_input(self, action_id, action)
	if action_id == hash("type") then
		print("INPUT===")
		self.message = self.message .. action.text -- <3>
		label.set_text("#userLabel", self.message) -- <4>
		label.set_text("#passLabel", self.message) -- <4>
	elseif action_id == hash("backspace") and action.repeated then
		local l = string.len(self.message)
		self.message = string.sub(self.message, 0, l-1) -- <5>
		label.set_text("#userLabel", self.message) -- <6>
		label.set_text("#passLabel", self.message) -- <6>
	end
end

--[[
1. Tell the engine that this object ("." is shorthand for the current game object) wants to receive input. The function `on_input()` will be called whenever input is received.
	2. Store a variable in the script component with the text that the user types.
	3. If the "type" text trigger action is sent, add the typed text to the variable `message` that stores the text.
	4. Set the label component to the stored text.
	5. If the user presses <kbd>backspace</kbd>, set the stored text to a substring starting at the beginning of the stored text and ending at the length of the stored text minus 1. This erases the last character from the stored text.
	6. Set the label component to the stored text.
	--]]